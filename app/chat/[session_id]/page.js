"use client";

import { useState, useEffect, useRef } from 'react';
import { useParams } from 'next/navigation';
import { supabase } from '@/app/lib/supabaseClient';
import axios from 'axios';
import { useAuth } from "../../auth";

const ChatPage = () => {
  const [message, setMessage] = useState('');
  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
  const [messages, setMessages] = useState([]);
  const chatEndRef = useRef(null);

  //‡πÄ‡∏à‡∏°‡∏™‡πå : ‡πÄ‡∏Å‡πá‡∏ö param(uuidv4) ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å action ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏° "‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà" ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô Drawer
  const { session_id } = useParams();

  //‡πÄ‡∏à‡∏°‡∏™‡πå : ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user
  const { user } = useAuth();

  // console.log(messages.length);
  //  console.log(session_id);

  //‡πÄ‡∏à‡∏°‡∏™‡πå : ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡∏°‡πà
  useEffect(() => {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
    const getChatHistoryBySessionId = async () => {
      try {
        const { data, error } = await supabase
          .from('chat_history_tb')
          .select('*')
          .eq('session_id', session_id)
          .order('created_at', { ascending: true });

        if (error) {
          console.error('Error fetching chat history:', error);
        } else {
          console.log(data);
          setMessages(data);
        }

      } catch (error) {
        console.error('Error fetching chat history:', error);
      }
    }

    getChatHistoryBySessionId();
  }, [session_id]);

  // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ messages ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ä‡∏ó‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
  const scrollToBottom = () => {
    chatEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  // Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á Bubble ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (üåü ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ üåü)
  const MessageBubble = ({ message }) => {
    // ‚ùå ‡πÄ‡∏î‡∏¥‡∏°: const isUser = message.sender === 'user';
    // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ role ‡πÅ‡∏ó‡∏ô sender
    const isUser = message.role === 'user';

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á
    const containerClasses = isUser
      ? "flex justify-end mb-4 pr-4 md:pr-8" // ‡∏à‡∏±‡∏î‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤
      : "flex justify-start mb-4 pl-4 md:pl-8"; // ‡∏à‡∏±‡∏î‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢

    const bubbleClasses = isUser
      ? "bg-gray-200 text-gray-800 rounded-xl rounded-tr-none max-w-xs md:max-w-md lg:max-w-xl p-3 shadow-sm" // ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡∏≠‡πà‡∏≠‡∏ô, ‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
      : "bg-white text-gray-800 rounded-xl rounded-tl-none max-w-xs md:max-w-md lg:max-w-xl p-3 shadow-lg border border-gray-100"; // ‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß, ‡∏°‡∏∏‡∏°‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°

    return (
      <div className={containerClasses}>
        <div className={bubbleClasses}>
          {/* ‚ùå ‡πÄ‡∏î‡∏¥‡∏°: <p className="...">{message.text}</p> */}
          {/* ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ content ‡πÅ‡∏ó‡∏ô text */}
          <p className="text-base md:text-lg whitespace-pre-wrap">{message.content}</p>
        </div>
      </div>
    );
  };

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  const handleSendMessage = async () => {
    if (message.trim() === '') {
      alert('‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°');
      return;
    }

    const currentMessage = message; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏±‡πâ‡∏ô

    const userMessage = {
      content: currentMessage,
      role: 'user',
    };

    //‡πÄ‡∏à‡∏°‡∏™‡πå : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ messages ‡∏°‡∏µ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πà ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á session ‡πÉ‡∏´‡∏°‡πà
    if (Array.isArray(messages) && messages.length === 0) {
      try {
        const { data, error } = await supabase
          .from('chat_session_tb')
          .insert([
            {
              session_id: session_id,
              user_id: user?.user_id,
              session_name: currentMessage
            }
          ]);

        if (error) {
          console.error('Error create new session:', error);
        }else{
          console.log(data);
        }

      } catch (error) {
        console.error('Error create new session:', error);
      }
    }

    // 1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° User ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    setMessages((prevMessages) => [...prevMessages, userMessage]);

    // 2. ‡∏•‡πâ‡∏≤‡∏á input
    setMessage('');

    const formData = new FormData();
    formData.append('session_id', session_id);
    formData.append('role', 'user');
    formData.append('content', currentMessage); // ‡πÉ‡∏ä‡πâ currentMessage ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ

    try {
      const res = await axios.post('http://localhost:5678/webhook/chat', formData);
      console.log(res.data);

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å server
      setMessages((prevMessages) => [...prevMessages, {
        content: res.data,
        role: 'ai'
      }]);
    } catch (error) {
      console.error('Error insert chat history:', error);
      // **‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏õ‡∏•‡∏≠‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î** (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
      setMessages((prevMessages) => [...prevMessages, {
        content: "‚ö†Ô∏è ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö API ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡πÇ‡∏õ‡∏£‡∏î‡∏ñ‡∏≤‡∏°‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á",
        role: 'ai'
      }]);
    }
  };

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  const hasMessages = messages.length > 0;

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Enter ‡πÉ‡∏ô textarea (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
  const handleKeyDown = (e) => {
    // ‡∏™‡πà‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Enter ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Shift (‡∏Ñ‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà)
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
      handleSendMessage();
    }
  };


  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î layout ‡∏Ç‡∏≠‡∏á main content
  const mainContentClasses = hasMessages
    ? "flex-1 flex flex-col justify-between p-0 overflow-y-auto relative"
    : "flex-1 flex flex-col items-center justify-center text-center p-4 overflow-y-auto";

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î layout ‡∏Ç‡∏≠‡∏á Input Area
  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ‡πÉ‡∏ä‡πâ FIXED BOTTOM ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏™‡∏°‡∏≠
  const inputAreaClasses = hasMessages
    ? "w-full px-4 bottom-0 left-0 right-0 flex justify-center z-10 py-4 bg-gray-50 border-t border-gray-200"
    : "w-full max-w-lg lg:max-w-2xl px-4";

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á Input box ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå
  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ‡πÉ‡∏´‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏° max-w-4xl ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Chat History
  const inputContainerWidth = hasMessages
    ? "w-full max-w-4xl" // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏±‡∏Å (max-w-4xl)
    : "w-full max-w-lg lg:max-w-2xl"; // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°

  return (
    <div className="flex min-h-screen bg-gray-50 font-sans">


      {/* Main Content Container */}
      <div className="flex-1 flex flex-col">

        {/* Header (‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ) */}
        <header className="p-6 md:p-8 w-full bg-white shadow-md z-20">
          <h1 className="text-xl font-bold text-gray-800 ml-16 md:ml-20">
            Siam Archive
          </h1>
        </header>

        {/* Chat Content / Welcome Screen */}
        <main className={mainContentClasses}>

          {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ */}
          {!hasMessages ? (
            // **‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤**
            <div className="flex flex-col items-center justify-center flex-1 w-full p-4">
              {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö */}
              <div className="space-y-3 mb-10 md:mb-16">
                <p className="text-2xl md:text-3xl font-light text-gray-700">
                  ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠ AI ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á Siam Archive
                </p>
                <h2 className="text-3xl md:text-4xl font-semibold text-gray-800">
                  ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ú‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏î...?
                </h2>
              </div>

              {/* Input Area ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤: ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á */}
              <div className={inputAreaClasses}>
                <div className={`relative flex items-center bg-white border border-gray-200 rounded-2xl shadow-xl transition-shadow duration-300 hover:shadow-2xl ${inputContainerWidth}`}>

                  {/* Input ‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô TEXTAREA */}
                  <textarea
                    rows={1} // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 1 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
                    placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£..."
                    value={message}
                    onChange={(e) => setMessage(e.target.value)}
                    className="w-full py-3 pl-6 pr-16 text-lg text-gray-700 placeholder-gray-400 bg-transparent focus:outline-none resize-none overflow-y-hidden min-h-[56px]" // 56px ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á input ‡πÄ‡∏î‡∏¥‡∏° (py-4 ‡∏Ñ‡∏∑‡∏≠ 32px + padding)
                    onKeyDown={handleKeyDown}
                  />

                  {/* Submit Button */}
                  <button
                    aria-label="Send message"
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 p-3 bg-blue-500 rounded-full shadow-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:bg-gray-400"
                    onClick={handleSendMessage}
                    disabled={message.trim() === ''}
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                      fill="white"
                      className="w-5 h-5 -rotate-45"
                    >
                      <path d="M3.478 2.405a.75.75 0 0 0-.926.94l2.432 7.905H13.5a.75.75 0 0 1 0 1.5H4.984l-2.432 7.905a.75.75 0 0 0 .926.94 60.519 60.519 0 0 0 18.445-8.986.75.75 0 0 0 0-1.218A60.517 60.517 0 0 0 3.478 2.405Z" />
                    </svg>
                  </button>
                </div>
              </div>
            </div>

          ) : (
            // **‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤**
            <>
              {/* Chat History: ‡∏°‡∏µ padding-bottom ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å Input Area ‡∏ö‡∏±‡∏á */}
              <div className="flex-1 w-full max-w-4xl mx-auto pt-4 pb-20 overflow-y-auto">
                {messages.map((msg, index) => (
                  <MessageBubble key={index} message={msg} />
                ))}
                <div ref={chatEndRef} className="h-4" /> {/* ‡∏ï‡∏±‡∏ß‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Scroll */}
              </div>

              {/* Input Area ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤: FIXED ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á */}
              <div className={inputAreaClasses}>
                <div className={`relative flex items-center bg-white border border-gray-200 rounded-2xl shadow-xl transition-shadow duration-300 hover:shadow-2xl ${inputContainerWidth}`}>

                  {/* Input ‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô TEXTAREA */}
                  <textarea
                    rows={1}
                    placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£..."
                    value={message}
                    onChange={(e) => setMessage(e.target.value)}
                    className="w-full py-3 pl-6 pr-16 text-lg text-gray-700 placeholder-gray-400 bg-transparent focus:outline-none resize-none overflow-y-hidden min-h-[56px]"
                    onKeyDown={handleKeyDown}
                  />

                  {/* Submit Button */}
                  {/* ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏°‡∏≠ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤ textarea ‡∏à‡∏∞‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏ó‡πà‡∏≤‡πÉ‡∏î */}
                  <button
                    aria-label="Send message"
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 p-3 bg-blue-500 rounded-full shadow-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:bg-gray-400"
                    onClick={handleSendMessage}
                    disabled={message.trim() === ''}
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                      fill="white"
                      className="w-5 h-5 -rotate-45"
                    >
                      <path d="M3.478 2.405a.75.75 0 0 0-.926.94l2.432 7.905H13.5a.75.75 0 0 1 0 1.5H4.984l-2.432 7.905a.75.75 0 0 0 .926.94 60.519 60.519 0 0 0 18.445-8.986.75.75 0 0 0 0-1.218A60.517 60.517 0 0 0 3.478 2.405Z" />
                    </svg>
                  </button>
                </div>
              </div>
            </>
          )}

        </main>
      </div>
    </div>
  );
};

export default ChatPage;
"use client";

import React, { useState } from "react";

export default function SettingsPage() {
  // --- State ---
  const [notifications, setNotifications] = useState({
    research: true,
    feedback: true,
    news: false,
  });

  const [theme, setTheme] = useState("light");
  const [language, setLanguage] = useState("thai");

  // --- Handlers ---
  const handleToggle = (field) => {
    setNotifications((prev) => ({ ...prev, [field]: !prev[field] }));
  };

  const handleThemeChange = (event) => {
    setTheme(event.target.value);
  };

  const handleLanguageChange = (event) => {
    setLanguage(event.target.value);
  };

  const handleSave = () => {
    console.log("--- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß (Mock Save) ---");
    console.log("‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:", notifications);
    console.log("‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•:", { theme, language });
  };

  const handleDelete = () => {
    console.log("--- ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ (Mock Delete) ---");
    console.log("‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ confirmation modal ‡∏à‡∏£‡∏¥‡∏á)");
  };

  return (
    <div className="p-4 sm:p-6 lg:p-8 max-w-4xl mx-auto settings-container">
      {/* Header */}
      <h1 className="text-3xl font-bold mb-8 text-gray-900 border-b border-gray-200 pb-4">
        ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
      </h1>

      {/* ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */}
      <div className="bg-white p-6 rounded-xl shadow-md border border-gray-100 mb-6">
        <h2 className="text-xl font-bold mb-4 text-gray-800">‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h2>

        {/* ‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢ */}
        <div className="flex justify-between items-center py-4 border-b border-gray-100">
          <div className="flex-1 pr-4">
            <p className="font-semibold text-gray-800">‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢</p>
            <p className="text-sm text-gray-500 mt-1">
              ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥, ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
            </p>
          </div>
          <label className="relative inline-flex items-center cursor-pointer">
            <input
              type="checkbox"
              className="sr-only peer"
              checked={notifications.research}
              onChange={() => handleToggle("research")}
            />
            <div className="w-10 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-blue-600"></div>
          </label>
        </div>

        {/* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏´‡∏°‡πà */}
        <div className="flex justify-between items-center py-4 border-b border-gray-100">
          <div className="flex-1 pr-4">
            <p className="font-semibold text-gray-800">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏´‡∏°‡πà</p>
            <p className="text-sm text-gray-500 mt-1">
              ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏≤‡∏ô (Reviewer) ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô
            </p>
          </div>
          <label className="relative inline-flex items-center cursor-pointer">
            <input
              type="checkbox"
              className="sr-only peer"
              checked={notifications.feedback}
              onChange={() => handleToggle("feedback")}
            />
            <div className="w-10 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-blue-600"></div>
          </label>
        </div>

        {/* ‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ó */}
        <div className="flex justify-between items-center py-4">
          <div className="flex-1 pr-4">
            <p className="font-semibold text-gray-800">‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ó</p>
            <p className="text-sm text-gray-500 mt-1">
              ‡∏£‡∏±‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£ ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö
            </p>
          </div>
          <label className="relative inline-flex items-center cursor-pointer">
            <input
              type="checkbox"
              className="sr-only peer"
              checked={notifications.news}
              onChange={() => handleToggle("news")}
            />
            <div className="w-10 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-blue-600"></div>
          </label>
        </div>
      </div>

      {/* ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• */}
      <div className="bg-white p-6 rounded-xl shadow-md border border-gray-100 mb-6">
        <h2 className="text-xl font-bold mb-4 text-gray-800">‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•</h2>

        {/* ‡∏ò‡∏µ‡∏° */}
        <div className="mb-6">
          <p className="font-semibold text-gray-800 mb-3">‡∏ò‡∏µ‡∏° (Theme)</p>
          <div className="flex flex-wrap gap-3" id="theme_radio_group">
            <label
              className={`flex items-center px-4 py-2 border-2 rounded-lg cursor-pointer transition-all flex-shrink-0 ${
                theme === "light"
                  ? "border-blue-600 bg-blue-50 text-blue-800"
                  : "border-gray-300 text-gray-700 hover:bg-gray-50"
              }`}
            >
              <input
                type="radio"
                name="theme"
                value="light"
                className="text-blue-600 border-gray-300 focus:ring-blue-500 mr-2"
                checked={theme === "light"}
                onChange={handleThemeChange}
              />
              <span className="text-sm font-medium whitespace-nowrap">‚òÄÔ∏è ‡∏™‡∏ß‡πà‡∏≤‡∏á (Light)</span>
            </label>
            <label
              className={`flex items-center px-4 py-2 border-2 rounded-lg cursor-pointer transition-all flex-shrink-0 ${
                theme === "dark"
                  ? "border-blue-600 bg-blue-50 text-blue-800"
                  : "border-gray-300 text-gray-700 hover:bg-gray-50"
              }`}
            >
              <input
                type="radio"
                name="theme"
                value="dark"
                className="text-blue-600 border-gray-300 focus:ring-blue-500 mr-2"
                checked={theme === "dark"}
                onChange={handleThemeChange}
              />
              <span className="text-sm font-medium whitespace-nowrap">üåô ‡∏°‡∏∑‡∏î (Dark)</span>
            </label>
            <label
              className={`flex items-center px-4 py-2 border-2 rounded-lg cursor-pointer transition-all flex-shrink-0 ${
                theme === "system"
                  ? "border-blue-600 bg-blue-50 text-blue-800"
                  : "border-gray-300 text-gray-700 hover:bg-gray-50"
              }`}
            >
              <input
                type="radio"
                name="theme"
                value="system"
                className="text-blue-600 border-gray-300 focus:ring-blue-500 mr-2"
                checked={theme === "system"}
                onChange={handleThemeChange}
              />
              <span className="text-sm font-medium whitespace-nowrap">üíª ‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö</span>
            </label>
          </div>
        </div>

        {/* ‡∏†‡∏≤‡∏©‡∏≤ */}
        <div>
          <p className="font-semibold text-gray-800 mb-3">‡∏†‡∏≤‡∏©‡∏≤ (Language)</p>
          <div className="relative w-full sm:w-64">
            <select
              id="language_select"
              value={language}
              onChange={handleLanguageChange}
              className="block appearance-none w-full bg-white border border-gray-300 hover:border-gray-500 px-4 py-2 pr-8 rounded-lg shadow-sm leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
            >
              <option value="thai">‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (Thai)</option>
              <option value="english">‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© (English)</option>
              <option value="chinese">‡∏†‡∏≤‡∏©‡∏≤‡∏à‡∏µ‡∏ô (Chinese)</option>
            </select>
            <div className="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
              <svg
                className="fill-current h-4 w-4"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
              >
                <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
              </svg>
            </div>
          </div>
        </div>
      </div>

      {/* ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ */}
      <div className="bg-red-50 p-6 rounded-xl shadow-md border border-red-300 mb-24">
        <h2 className="text-xl font-bold mb-4 text-red-700">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</h2>
        <div>
          <p className="font-semibold text-red-800 mb-2">‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>
          <p className="text-sm text-red-500 max-w-lg mb-4">
            ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏≤‡∏ß‡∏£
          </p>

          <button
            id="delete_account_btn"
            className="flex items-center px-5 py-2 bg-red-600 text-white text-sm font-semibold rounded-xl delete-btn hover:bg-red-700 transition-colors"
            onClick={handleDelete}
          >
            <svg
              className="w-4 h-4 mr-2"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fillRule="evenodd"
                d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                clipRule="evenodd"
              />
            </svg>
            ‡∏â‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
          </button>
        </div>
      </div>

      {/* Sticky Save Button */}
      <div className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4 shadow-2xl z-10">
        <div className="max-w-4xl mx-auto flex justify-end">
          <button
            id="save_changes_btn"
            className="px-8 py-2.5 bg-blue-600 text-white font-semibold text-base rounded-xl hover:bg-blue-700 transition-colors shadow-lg focus:outline-none focus:ring-4 focus:ring-blue-300"
            onClick={handleSave}
          >
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
          </button>
        </div>
      </div>
    </div>
  );
}

"use client";

// ‡πÄ‡∏à‡∏°‡∏™‡πå : ‡πÄ‡∏û‡∏¥‡πà‡∏° uuidv4 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏ô‡∏£‡∏´‡∏±‡∏™ session ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î "‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà"
import { v4 as uuidv4 } from "uuid";
import React, { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import { supabase } from "../lib/supabaseClient";
import {
  Home,
  Notebook,
  Settings,
  Shuffle,
  LayoutList,
  Plus,
  User,
  LogIn,
  UserPlus,
} from "lucide-react";
import { useAuth } from "../auth";

// ================= Drawer Data ================= //
const mainMenuItems = [
  { name: "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å", icon: Home, key: "home", path: "/" },
  { name: "‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î", icon: Notebook, key: "library", path: "/search" },
];

const functionMenuItems = [
  { name: "‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", icon: Settings, key: "extract", path: "/extraction" },
  { name: "‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤", icon: Shuffle, key: "compare", path: "/comparison" },
  { name: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏†‡∏≤‡∏û", icon: LayoutList, key: "diagram", path: "/visualization" },
];

// ================= Drawer Items ================= //
const DrawerItem = ({ icon: Icon, label, isActive, onClick, disabled }) => {
  const handleClick = () => {
    if (disabled) return;
    onClick();
  };

  return (
    <div
      onClick={handleClick}
      className={`flex items-center p-3 rounded-lg transition-colors 
        ${isActive ? "bg-blue-100 text-blue-700 font-semibold" : "text-gray-600 hover:bg-gray-100"}
        ${disabled ? "cursor-not-allowed opacity-50 pointer-events-none" : "cursor-pointer"}
      `}
    >
      <Icon className="w-5 h-5 mr-3" />
      <span className="text-sm">{label}</span>
    </div>
  );
};

const HistoryItem = ({ title, isActive, onClick }) => (
  <div
    onClick={onClick}
    className={`flex items-center py-2 px-3 pl-6 cursor-pointer rounded-lg transition-colors ${
      isActive ? "bg-blue-100 text-blue-700 font-semibold" : "text-gray-600 hover:bg-gray-100"
    } text-sm truncate`}
    title={title}
  >
    <span className="mr-2">‚Ä¢</span>
    {title}
  </div>
);

const Drawer = ({ onToggle }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [activeMenuKey, setActiveMenuKey] = useState("home");
  const [chatHistory, setChatHistory] = useState([]);
  const [chatLoading, setChatLoading] = useState(false);
  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);
  const router = useRouter();
  const { user, logout } = useAuth();

  // ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î Drawer ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Wrapper.js (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  useEffect(() => {
    if (typeof onToggle === "function") {
      onToggle(isOpen);
    }
  }, [isOpen, onToggle]);

  // ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const getAllChatSessionByUserId = async () => {
    setChatLoading(true);
    if (!user?.user_id) {
      setChatHistory([]);
      setChatLoading(false);
      return;
    }

    try {
      const { data, error } = await supabase
        .from("chat_session_tb")
        .select("*")
        .eq("user_id", user.user_id)
        .order("created_at", { ascending: false });

      if (error) {
        console.error("Error fetching chat session:", error);
        setChatHistory([]);
      } else {
        setChatHistory(data);
      }
    } catch (error) {
      console.error("Error fetching chat session:", error);
      setChatHistory([]);
    } finally {
      setChatLoading(false);
    }
  };

  // ‡∏î‡∏∂‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ user_id ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    getAllChatSessionByUserId();
  }, [user?.user_id]);

  // üîÑ Subscribe realtime ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà
  useEffect(() => {
    if (!user?.user_id) return;

    const channel = supabase
      .channel("chat_session_changes")
      .on(
        "postgres_changes",
        { event: "INSERT", schema: "public", table: "chat_session_tb", filter: `user_id=eq.${user.user_id}` },
        (payload) => {
          const newSession = payload.new;
          setChatHistory((prevHistory) => [newSession, ...prevHistory]);
        }
      )
      .subscribe();

    return () => {
      supabase.removeChannel(channel);
    };
  }, [user?.user_id]);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á session ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
  const handleClickNewChat = () => {
    const new_session_id = uuidv4();
    router.push(`/chat/${new_session_id}`);
  };

  const handleLogout = () => {
    setIsProfileMenuOpen(false);
    logout();
    router.replace("/login");
  };

  return (
    <>
      {/* ‡∏õ‡∏∏‡πà‡∏° ‚ò∞ ‡πÄ‡∏õ‡∏¥‡∏î Drawer */}
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="p-4 text-2xl text-black rounded-lg fixed top-4 left-4 z-50 cursor-pointer hover:bg-gray-200 transition-colors"
      >
        ‚ò∞
      </button>

      {/* Drawer */}
      <div
        className={`fixed top-0 left-0 h-full w-72 bg-white border-r border-gray-200 shadow-xl overflow-hidden z-50 transform transition-transform duration-300 ${
          isOpen ? "translate-x-0" : "-translate-x-full"
        }`}
      >
        <div className="flex-grow p-4 space-y-6 overflow-y-auto">
          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î */}
          <button
            onClick={() => setIsOpen(!isOpen)}
            className="p-2 text-2xl text-black rounded-lg cursor-pointer hover:bg-gray-200 transition-colors"
          >
            ‚ò∞
          </button>

          {/* ===== ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ ===== */}
          <section>
            <h2 className="text-xs font-semibold uppercase text-gray-400 mb-2">‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</h2>
            <div className="space-y-1">
              {mainMenuItems.map((item) => (
                <DrawerItem
                  key={item.key}
                  icon={item.icon}
                  label={item.name}
                  isActive={activeMenuKey === item.key}
                  onClick={() => {
                    setActiveMenuKey(item.key);
                    router.push(item.path);
                  }}
                />
              ))}
            </div>
          </section>

          {/* ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ===== */}
          <section>
            <h2 className="text-xs font-semibold uppercase text-gray-400 mb-2">‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô</h2>
            <div className="space-y-1">
              {functionMenuItems.map((item) => (
                <DrawerItem
                  key={item.key}
                  icon={item.icon}
                  label={item.name}
                  disabled={!user}
                  isActive={activeMenuKey === item.key}
                  onClick={() => router.push(item.path)}
                />
              ))}
            </div>
          </section>

          <hr className="border-gray-200" />

          {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà */}
          <button
            onClick={handleClickNewChat}
            className="w-full flex items-center justify-center py-2.5 px-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-md transition-colors"
          >
            <Plus className="w-5 h-5 mr-2" /> ‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà
          </button>

          {/* ===== ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó ===== */}
          <section className="mt-5">
            <h2 className="text-xs font-semibold uppercase text-gray-400 mb-2">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó</h2>
            <div className="space-y-1">
              {chatLoading ? (
                <p className="text-gray-400 text-sm pl-6">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
              ) : chatHistory.length > 0 ? (
                chatHistory.map((item) => (
                  <HistoryItem
                    key={item.session_id}
                    title={item.session_name || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ä‡∏ó"}
                    isActive={activeMenuKey === item.session_id}
                    onClick={() => router.push(`/chat/${item.session_id}`)}
                  />
                ))
              ) : (
                <p className="text-gray-400 text-sm pl-6">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó</p>
              )}
            </div>
          </section>
        </div>

        {/* ===== Footer / ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ===== */}
        <div className="p-4 border-t border-gray-200 relative">
          <div
            onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}
            className="flex items-center p-2 rounded-lg bg-gray-50 hover:bg-gray-100 cursor-pointer transition-colors"
          >
            <div className="p-2 bg-gray-300 rounded-full">
              <User className="w-5 h-5 text-gray-600" />
            </div>
            <span className="ml-3 font-medium text-gray-800 truncate">
              {user ? user.username : "Guest"}
            </span>
          </div>

          {isProfileMenuOpen && (
            <div className="absolute bottom-16 left-4 w-60 bg-white border border-gray-200 shadow-lg rounded-lg overflow-hidden z-50">
              {user ? (
                <>
                  <div
                    onClick={() => router.push("/profile")}
                    className="px-4 py-2 hover:bg-gray-100 cursor-pointer"
                  >
                    ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
                  </div>
                  <div className="px-4 py-2 hover:bg-gray-100 cursor-pointer">
                    ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î
                  </div>
                  <div className="px-4 py-2 hover:bg-gray-100 cursor-pointer">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</div>
                  <div
                    onClick={handleLogout}
                    className="px-4 py-2 hover:bg-gray-100 cursor-pointer text-red-600"
                  >
                    ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                  </div>
                </>
              ) : (
                <>
                  <div
                    onClick={() => router.push("/login")}
                    className="px-4 py-2 hover:bg-gray-100 cursor-pointer flex items-center"
                  >
                    <LogIn className="w-4 h-4 mr-2" /> ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                  </div>
                  <div
                    onClick={() => router.push("/register")}
                    className="px-4 py-2 hover:bg-gray-100 cursor-pointer flex items-center"
                  >
                    <UserPlus className="w-4 h-4 mr-2" /> ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
                  </div>
                  <div className="px-4 py-2 hover:bg-gray-100 cursor-pointer">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</div>
                </>
              )}
            </div>
          )}
        </div>
      </div>
    </>
  );
};

export default Drawer;
